import java.io.*;
import java.util.HashMap;
import java.util.Map;
import java.util.TreeMap;

public class ARTProcessor {
    static class VolumeData {
        double[] file1Volumes; // [prodVolume, uatVolume]
        double[] file2Volumes; // [prodVolume, uatVolume]
        
        public VolumeData() {
            this.file1Volumes = new double[2];
            this.file2Volumes = new double[2];
        }
    }
    
    public static void main(String[] args) {
        // Update these file paths
        String inputPath1 = "C:\\data1.csv";
        String inputPath2 = "C:\\data2.csv";
        String outputPath = "C:\\combined_summary.csv";
        
        // Using TreeMap for sorted ART names
        Map<String, VolumeData> artSummary = new TreeMap<>();
        
        try {
            // Process first file
            processInputFile(inputPath1, artSummary, true);
            
            // Process second file
            processInputFile(inputPath2, artSummary, false);
            
            // Write combined output
            writeCombinedOutput(outputPath, artSummary);
            
            // Display in console
            printConsoleOutput(artSummary);
            
        } catch (Exception e) {
            System.out.println("Error in processing: " + e.getMessage());
            e.printStackTrace();
        }
    }
    
    private static void processInputFile(String filePath, Map<String, VolumeData> artSummary, boolean isFirstFile) 
            throws IOException {
        BufferedReader br = new BufferedReader(new FileReader(filePath));
        
        // Skip header line
        String line = br.readLine();
        
        // Read data lines
        while ((line = br.readLine()) != null) {
            String[] values = line.split(",");
            if (values.length >= 4) {
                String artName = values[0].trim();
                double prodVolume = Double.parseDouble(values[2].trim());
                double uatVolume = Double.parseDouble(values[3].trim());
                
                // Get or create VolumeData for this ART
                VolumeData volumeData = artSummary.computeIfAbsent(artName, k -> new VolumeData());
                
                // Update appropriate volumes based on which file we're processing
                if (isFirstFile) {
                    volumeData.file1Volumes[0] += prodVolume;
                    volumeData.file1Volumes[1] += uatVolume;
                } else {
                    volumeData.file2Volumes[0] += prodVolume;
                    volumeData.file2Volumes[1] += uatVolume;
                }
            }
        }
        br.close();
    }
    
    private static void writeCombinedOutput(String outputPath, Map<String, VolumeData> artSummary) 
            throws IOException {
        PrintWriter pw = new PrintWriter(new BufferedWriter(new FileWriter(outputPath)));
        
        // Write headers
        pw.println("ART Name,File1 Prod Volume,File1 UAT Volume,File2 Prod Volume,File2 UAT Volume");
        
        // Write data
        for (Map.Entry<String, VolumeData> entry : artSummary.entrySet()) {
            VolumeData data = entry.getValue();
            pw.printf("%s,%.0f,%.0f,%.0f,%.0f%n",
                entry.getKey(),
                data.file1Volumes[0],
                data.file1Volumes[1],
                data.file2Volumes[0],
                data.file2Volumes[1]);
        }
        
        pw.close();
        System.out.println("Combined summary has been written to: " + outputPath);
    }
    
    private static void printConsoleOutput(Map<String, VolumeData> artSummary) {
        System.out.println("\nCombined ART Summary Report");
        System.out.println("=================================================================");
        System.out.printf("%-15s %-15s %-15s %-15s %-15s%n", 
            "ART Name", 
            "File1 Prod", 
            "File1 UAT", 
            "File2 Prod", 
            "File2 UAT");
        System.out.println("-----------------------------------------------------------------");
        
        for (Map.Entry<String, VolumeData> entry : artSummary.entrySet()) {
            VolumeData data = entry.getValue();
            System.out.printf("%-15s %-15.0f %-15.0f %-15.0f %-15.0f%n",
                entry.getKey(),
                data.file1Volumes[0],
                data.file1Volumes[1],
                data.file2Volumes[0],
                data.file2Volumes[1]);
        }
    }
}
